{"version":3,"file":"static/js/174.1fe10c19.chunk.js","mappings":"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","sources":["components/CustomPagination/CustomPagination.js","components/ShowAllCards/ShowAllCards.js","components/TitleOfPages/Title.js","components/Toggle Button/Toggle.js","pages/TvSeries/TvSeries.js"],"sourcesContent":["import * as React from 'react';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Stack from '@mui/material/Stack';\r\nimport './CustomePagination.css'\r\nexport default function PaginationSize({ pages, setPageNo }) {\r\n  const pageChange = (event, page) => {\r\n    setPageNo(page);\r\n    window.scroll(0, 0);\r\n  }\r\n  return (\r\n    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", marginTop: 10, }} >\r\n      <Stack spacing={2}>\r\n        <Pagination className='pagination' color='primary' onChange={pageChange} count={pages} size=\"large\" />\r\n      </Stack>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport Card from '../Card/Card'\r\nconst ShowAllCards = ({ content }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                content ? (<div className='movies wrap_cards display1'>\r\n                    {\r\n                        content && content.map((c) => {\r\n                            return (\r\n                                <Card data={c} key={c.id} />\r\n                            )\r\n                        })\r\n                    }\r\n                </div>) : (<h2>Item does not exist (something went wrong!!)</h2>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowAllCards","import React from 'react'\r\nimport './title.css'\r\nconst Title = ({title}) => {\r\n  return (\r\n    <div className='poster' >{title}</div>\r\n  )\r\n}\r\n\r\nexport default Title","import * as React from 'react';\r\nimport './toggle.css'\r\n\r\nexport default function ColorToggleButton({ setShowList, showList, List }) {\r\n\r\n    const handleChange = (newValue) => {\r\n        setShowList(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className='togglebtn'>\r\n            {\r\n                List && List.map((e) => {\r\n                    return <div className='_toggle_singlebtn' key={e.name}>\r\n                        <label className={showList === e.listname ? 'active_' : 'label'} htmlFor={e.listname} >{e.name}</label>\r\n                        <input id={e.listname} type='radio' name='m' value={e.listname} onChange={(e) => {\r\n                            setShowList(e.target.value)\r\n                        }} checked={showList === e.listname} />\r\n                    </div>\r\n\r\n                })\r\n\r\n            }\r\n        </div>\r\n\r\n    );\r\n}","import React, { useEffect, useState } from 'react'\r\nimport '../../global.css'\r\nimport CustomPagination from '../../components/CustomPagination/CustomPagination';\r\nimport useFetch from '../../customHooks/Fetch';\r\nimport Title from '../../components/TitleOfPages/Title';\r\nimport ShowAllCards from '../../components/ShowAllCards/ShowAllCards';\r\nimport Toggle from '../../components/Toggle Button/Toggle';\r\nimport Loader from '../../components/Loading/Loading';\r\nconst Movies = () => {\r\n\r\n    const [pageNo, setPageNo] = useState(1);\r\n    const [pages, setPages] = useState();\r\n    const [content, setContent] = useState();\r\n    const [showList, setShowList] = useState('airing_today')\r\n    const url = `https://api.themoviedb.org/3/tv/${showList}?language=en-US&page=${pageNo}`;\r\n\r\n    const List = [\r\n        {\r\n            name: 'Airing Today',\r\n            listname: 'airing_today',\r\n        },\r\n        {\r\n            name: 'On The Air',\r\n            listname: 'on_the_air',\r\n        },\r\n        {\r\n            name: 'Popular',\r\n            listname: 'popular',\r\n        },\r\n        {\r\n            name: 'Top Rated',\r\n            listname: 'top_rated',\r\n        },\r\n    ]\r\n\r\n    // ----using custom hook Fetch data---- // \r\n    const { data, loading, error } = useFetch(url);\r\n    useEffect(() => {\r\n        data ? setContent(data.results) : setContent(null);\r\n        data ? setPages(data.total_pages) : setPages();\r\n    }, [data])\r\n    if (data) {\r\n        return (\r\n            <>\r\n                <Title title={'TvShows'} />\r\n                <Toggle showList={showList} setShowList={setShowList} List={List} />\r\n                {/* <h3 className='container'>{showList}</h3> */}\r\n                <div className='movies wrap_cards container'>\r\n                    <ShowAllCards content={content} />\r\n                </div>\r\n                <CustomPagination pages={pages} setPageNo={setPageNo} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    if (loading) {\r\n        <Loader setLoader={'true'} />\r\n    }\r\n\r\n    if (error) {\r\n        <p>something went wrong!!!</p>\r\n    }\r\n}\r\n\r\nexport default Movies"],"names":["PaginationSize","_ref","pages","setPageNo","_jsx","style","width","display","justifyContent","marginTop","children","Stack","spacing","Pagination","className","color","onChange","event","page","window","scroll","count","size","content","map","c","Card","data","id","title","ColorToggleButton","setShowList","showList","List","e","_jsxs","listname","htmlFor","name","type","value","target","checked","_useState","useState","_useState2","_slicedToArray","pageNo","_useState3","_useState4","setPages","_useState5","_useState6","setContent","_useState7","_useState8","url","concat","_useFetch","useFetch","loading","error","useEffect","results","total_pages","_Fragment","Title","Toggle","ShowAllCards","CustomPagination","Loader"],"sourceRoot":""}